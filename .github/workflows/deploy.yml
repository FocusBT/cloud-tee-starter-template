name: Build, Push & Deploy to Phala Cloud

on:
  push:
    branches:
      - main
    paths:
      - "api-server/pyproject.toml"
      - "api-server/Dockerfile"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      environment:
        description: 'Environment to deploy'
        required: false
        default: 'staging'

env:
  APP_NAME: ${{ vars.APP_NAME || secrets.APP_NAME }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME || secrets.DOCKER_USERNAME }}
  DOCKER_IMAGE: ${{ vars.DOCKER_IMAGE || secrets.DOCKER_IMAGE }}
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY || secrets.DOCKER_REGISTRY || 'docker.io' }}
  DOCKER_REGISTRY_USERNAME: ${{ vars.DOCKER_REGISTRY_USERNAME || secrets.DOCKER_REGISTRY_USERNAME }}
  DOCKER_REGISTRY_PASSWORD: ${{ vars.DOCKER_REGISTRY_PASSWORD || secrets.DOCKER_REGISTRY_PASSWORD }}
  PHALA_CLOUD_API_KEY: ${{ vars.PHALA_CLOUD_API_KEY || secrets.PHALA_CLOUD_API_KEY }}

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: api-server
          file: api-server/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Update Docker Compose
        run: |
          sed -i "s|\${DOCKER_IMAGE}|${DOCKER_IMAGE}|g" ./api-server/docker-compose.yml

      - name: Deploy to Phala Cloud
        uses: Leechael/phala-deploy-action@v2
        with:
          # Required parameters
          phala-api-key: ${{ secrets.PHALA_CLOUD_API_KEY }}
          
          # Optional parameters (with defaults)
          cvm-name: ''
          compose-file: './api-server/docker-compose.yml'  # Default: './docker-compose.yml'
          vcpu: '4'                         # Default: '2'
          memory: '4096'                    # Default: '2048'
          disk-size: '10'                   # Default: '40'
          envs: |                           # Environment variables in YAML format (will be converted to dotenv)
            EXAMPLE_ENV_VAR: 'none'
          app-id: ''                        # App ID of existing CVM to (if updating)
          node-id: ''                       # Node ID (Teepod ID)
          base-image: ''                    # Base image to use for the CVM
